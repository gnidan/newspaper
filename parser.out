Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> document
Rule 1     document -> block_list
Rule 2     block_list -> block block_list
Rule 3     block_list -> <empty>
Rule 4     block -> line header blank
Rule 5     block -> paragraph blank
Rule 6     header -> HEADER NEWLINE
Rule 7     paragraph -> line paragraph
Rule 8     paragraph -> line
Rule 9     line -> WORD line
Rule 10    line -> WORD NEWLINE
Rule 11    blank -> NEWLINE

Terminals, with rules where they appear

HEADER               : 6
NEWLINE              : 6 10 11
WORD                 : 9 10
error                : 

Nonterminals, with rules where they appear

blank                : 4 5
block                : 2
block_list           : 1 2
document             : 0
header               : 4
line                 : 4 7 8 9
paragraph            : 5 7

Parsing method: LALR

state 0

    (0) S' -> . document
    (1) document -> . block_list
    (2) block_list -> . block block_list
    (3) block_list -> .
    (4) block -> . line header blank
    (5) block -> . paragraph blank
    (9) line -> . WORD line
    (10) line -> . WORD NEWLINE
    (7) paragraph -> . line paragraph
    (8) paragraph -> . line

    $end            reduce using rule 3 (block_list -> .)
    WORD            shift and go to state 1

    paragraph                      shift and go to state 2
    block_list                     shift and go to state 3
    line                           shift and go to state 4
    document                       shift and go to state 5
    block                          shift and go to state 6

state 1

    (9) line -> WORD . line
    (10) line -> WORD . NEWLINE
    (9) line -> . WORD line
    (10) line -> . WORD NEWLINE

    NEWLINE         shift and go to state 8
    WORD            shift and go to state 1

    line                           shift and go to state 7

state 2

    (5) block -> paragraph . blank
    (11) blank -> . NEWLINE

    NEWLINE         shift and go to state 9

    blank                          shift and go to state 10

state 3

    (1) document -> block_list .

    $end            reduce using rule 1 (document -> block_list .)


state 4

    (4) block -> line . header blank
    (7) paragraph -> line . paragraph
    (8) paragraph -> line .
    (6) header -> . HEADER NEWLINE
    (7) paragraph -> . line paragraph
    (8) paragraph -> . line
    (9) line -> . WORD line
    (10) line -> . WORD NEWLINE

    NEWLINE         reduce using rule 8 (paragraph -> line .)
    HEADER          shift and go to state 11
    WORD            shift and go to state 1

    header                         shift and go to state 12
    line                           shift and go to state 14
    paragraph                      shift and go to state 13

state 5

    (0) S' -> document .



state 6

    (2) block_list -> block . block_list
    (2) block_list -> . block block_list
    (3) block_list -> .
    (4) block -> . line header blank
    (5) block -> . paragraph blank
    (9) line -> . WORD line
    (10) line -> . WORD NEWLINE
    (7) paragraph -> . line paragraph
    (8) paragraph -> . line

    $end            reduce using rule 3 (block_list -> .)
    WORD            shift and go to state 1

    paragraph                      shift and go to state 2
    block_list                     shift and go to state 15
    line                           shift and go to state 4
    block                          shift and go to state 6

state 7

    (9) line -> WORD line .

    HEADER          reduce using rule 9 (line -> WORD line .)
    WORD            reduce using rule 9 (line -> WORD line .)
    NEWLINE         reduce using rule 9 (line -> WORD line .)


state 8

    (10) line -> WORD NEWLINE .

    HEADER          reduce using rule 10 (line -> WORD NEWLINE .)
    WORD            reduce using rule 10 (line -> WORD NEWLINE .)
    NEWLINE         reduce using rule 10 (line -> WORD NEWLINE .)


state 9

    (11) blank -> NEWLINE .

    WORD            reduce using rule 11 (blank -> NEWLINE .)
    $end            reduce using rule 11 (blank -> NEWLINE .)


state 10

    (5) block -> paragraph blank .

    WORD            reduce using rule 5 (block -> paragraph blank .)
    $end            reduce using rule 5 (block -> paragraph blank .)


state 11

    (6) header -> HEADER . NEWLINE

    NEWLINE         shift and go to state 16


state 12

    (4) block -> line header . blank
    (11) blank -> . NEWLINE

    NEWLINE         shift and go to state 9

    blank                          shift and go to state 17

state 13

    (7) paragraph -> line paragraph .

    NEWLINE         reduce using rule 7 (paragraph -> line paragraph .)


state 14

    (7) paragraph -> line . paragraph
    (8) paragraph -> line .
    (7) paragraph -> . line paragraph
    (8) paragraph -> . line
    (9) line -> . WORD line
    (10) line -> . WORD NEWLINE

    NEWLINE         reduce using rule 8 (paragraph -> line .)
    WORD            shift and go to state 1

    line                           shift and go to state 14
    paragraph                      shift and go to state 13

state 15

    (2) block_list -> block block_list .

    $end            reduce using rule 2 (block_list -> block block_list .)


state 16

    (6) header -> HEADER NEWLINE .

    NEWLINE         reduce using rule 6 (header -> HEADER NEWLINE .)


state 17

    (4) block -> line header blank .

    WORD            reduce using rule 4 (block -> line header blank .)
    $end            reduce using rule 4 (block -> line header blank .)

